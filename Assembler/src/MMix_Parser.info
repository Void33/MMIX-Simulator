-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.0 from MMix_Parser.y
-----------------------------------------------------------------------------

state 20 contains 11 reduce/reduce conflicts.
state 22 contains 11 reduce/reduce conflicts.

rule 22 is unused
rule 23 is unused
rule 55 is unused
rule 56 is unused
rule 57 is unused
rule 58 is unused
rule 59 is unused
rule 60 is unused
rule 61 is unused
rule 62 is unused
rule 63 is unused
rule 64 is unused
rule 65 is unused
rule 66 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseFile -> Program                        (0)
	Program -> AssignmentLines                         (1)
	AssignmentLines ->                                 (2)
	AssignmentLines -> AssignmentLines AssignmentLine   (3)
	AssignmentLine -> OP_CODE TwoPartOperatorList      (4)
	AssignmentLine -> OP_CODE ThreePartOperatorList    (5)
	AssignmentLine -> ID PI                            (6)
	AssignmentLine -> ID OP_CODE TwoPartOperatorList   (7)
	AssignmentLine -> ID OP_CODE ThreePartOperatorList   (8)
	AssignmentLine -> PI                               (9)
	ThreePartOperatorList -> OperatorElement COMMA OperatorElement COMMA OperatorElement   (10)
	TwoPartOperatorList -> OperatorElement COMMA Identifier   (11)
	OperatorElement -> BYTE_LIT                        (12)
	OperatorElement -> HALT                            (13)
	OperatorElement -> FPUTS                           (14)
	OperatorElement -> STDOUT                          (15)
	OperatorElement -> REG                             (16)
	OperatorElement -> Identifier                      (17)
	Identifier -> ID                                   (18)
	PI -> LOC GlobalVariables                          (19)
	PI -> LOC HEX                                      (20)
	PI -> LOC Loc_Exp                                  (21)
	PI -> GREG AT                                      (22)
	PI -> GREG BYTE_LIT                                (23)
	PI -> GREG Loc_Exp                                 (24)
	PI -> SET OperatorElement COMMA OperatorElement    (25)
	PI -> BYTE Byte_Array                              (26)
	PI -> WYDE Byte_Array                              (27)
	PI -> WYDE BYTE_LIT                                (28)
	PI -> TETRA Byte_Array                             (29)
	PI -> TETRA BYTE_LIT                               (30)
	PI -> OCTA Byte_Array                              (31)
	PI -> OCTA BYTE_LIT                                (32)
	PI -> IS INT                                       (33)
	PI -> IS REG                                       (34)
	PI -> IS Identifier                                (35)
	Byte_Array -> STR                                  (36)
	Byte_Array -> Byte_Array COMMA STR                 (37)
	Byte_Array -> Byte_Array COMMA BYTE_LIT            (38)
	GlobalVariables -> DS                              (39)
	Loc_Exp -> Identifier                              (40)
	Loc_Exp -> BYTE_LIT                                (41)
	Loc_Exp -> AT                                      (42)
	Loc_Exp -> Loc_Exp PLUS BYTE_LIT                   (43)
	Loc_Exp -> Loc_Exp PLUS Identifier                 (44)
	Loc_Exp -> Loc_Exp PLUS AT                         (45)
	Loc_Exp -> Loc_Exp MINUS BYTE_LIT                  (46)
	Loc_Exp -> Loc_Exp MINUS Identifier                (47)
	Loc_Exp -> Loc_Exp MINUS AT                        (48)
	Loc_Exp -> Loc_Exp MULTIPLY BYTE_LIT               (49)
	Loc_Exp -> Loc_Exp MULTIPLY Identifier             (50)
	Loc_Exp -> Loc_Exp MULTIPLY AT                     (51)
	Loc_Exp -> Loc_Exp DIVIDE BYTE_LIT                 (52)
	Loc_Exp -> Loc_Exp DIVIDE Identifier               (53)
	Loc_Exp -> Loc_Exp DIVIDE AT                       (54)
	Expression -> Term                                 (55)
	Expression -> Term Weak_Operator Term              (56)
	Term -> Primary_Expression                         (57)
	Term -> Term Strong_Operator Primary_Expression    (58)
	Primary_Expression -> INT                          (59)
	Primary_Expression -> Identifier                   (60)
	Primary_Expression -> BYTE_LIT                     (61)
	Primary_Expression -> AT                           (62)
	Strong_Operator -> MULTIPLY                        (63)
	Strong_Operator -> DIVIDE                          (64)
	Weak_Operator -> PLUS                              (65)
	Weak_Operator -> MINUS                             (66)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	OP_CODE        { TOpCode $$ }
	SET            { TSet }
	COMMA          { TComma }
	HALT           { THalt }
	FPUTS          { TFputS }
	STDOUT         { TStdOut }
	BYTE_LIT       { TByteLiteral $$ }
	ID             { TIdentifier $$ }
	REG            { TRegister $$ }
	INT            { TInteger $$ }
	LOC            { TLOC }
	IS             { TIS }
	WYDE           { TWyde }
	TETRA          { TTetra }
	OCTA           { TOcta }
	GREG           { TGREG }
	PLUS           { TPlus }
	MINUS          { TMinus }
	MULTIPLY       { TMult }
	DIVIDE         { TDivide }
	AT             { TAtSign }
	DS             { TDataSegment }
	BYTE           { TByte }
	STR            { TStringLiteral $$ }
	HEX            { THexLiteral $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseFile rule  0
	Program         rule  1
	AssignmentLines rules 2, 3
	AssignmentLine  rules 4, 5, 6, 7, 8, 9
	ThreePartOperatorList rule  10
	TwoPartOperatorList rule  11
	OperatorElement rules 12, 13, 14, 15, 16, 17
	Identifier      rule  18
	PI              rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
	Byte_Array      rules 36, 37, 38
	GlobalVariables rule  39
	Loc_Exp         rules 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
	Expression      rules 55, 56
	Term            rules 57, 58
	Primary_Expression rules 59, 60, 61, 62
	Strong_Operator rules 63, 64
	Weak_Operator   rules 65, 66

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	OP_CODE        reduce using rule 2
	SET            reduce using rule 2
	ID             reduce using rule 2
	LOC            reduce using rule 2
	IS             reduce using rule 2
	WYDE           reduce using rule 2
	TETRA          reduce using rule 2
	OCTA           reduce using rule 2
	GREG           reduce using rule 2
	BYTE           reduce using rule 2
	%eof           reduce using rule 2

	Program        goto state 3
	AssignmentLinesgoto state 2

State 1



	AssignmentLinesgoto state 2

State 2

	Program -> AssignmentLines .                        (rule 1)
	AssignmentLines -> AssignmentLines . AssignmentLine    (rule 3)

	OP_CODE        shift, and enter state 6
	SET            shift, and enter state 7
	ID             shift, and enter state 8
	LOC            shift, and enter state 9
	IS             shift, and enter state 10
	WYDE           shift, and enter state 11
	TETRA          shift, and enter state 12
	OCTA           shift, and enter state 13
	GREG           shift, and enter state 14
	BYTE           shift, and enter state 15
	%eof           reduce using rule 1

	AssignmentLine goto state 4
	PI             goto state 5

State 3

	%start_parseFile -> Program .                       (rule 0)

	%eof           accept


State 4

	AssignmentLines -> AssignmentLines AssignmentLine .    (rule 3)

	OP_CODE        reduce using rule 3
	SET            reduce using rule 3
	ID             reduce using rule 3
	LOC            reduce using rule 3
	IS             reduce using rule 3
	WYDE           reduce using rule 3
	TETRA          reduce using rule 3
	OCTA           reduce using rule 3
	GREG           reduce using rule 3
	BYTE           reduce using rule 3
	%eof           reduce using rule 3


State 5

	AssignmentLine -> PI .                              (rule 9)

	OP_CODE        reduce using rule 9
	SET            reduce using rule 9
	ID             reduce using rule 9
	LOC            reduce using rule 9
	IS             reduce using rule 9
	WYDE           reduce using rule 9
	TETRA          reduce using rule 9
	OCTA           reduce using rule 9
	GREG           reduce using rule 9
	BYTE           reduce using rule 9
	%eof           reduce using rule 9


State 6

	AssignmentLine -> OP_CODE . TwoPartOperatorList     (rule 4)
	AssignmentLine -> OP_CODE . ThreePartOperatorList    (rule 5)

	HALT           shift, and enter state 42
	FPUTS          shift, and enter state 43
	STDOUT         shift, and enter state 44
	BYTE_LIT       shift, and enter state 45
	ID             shift, and enter state 21
	REG            shift, and enter state 46

	ThreePartOperatorListgoto state 47
	TwoPartOperatorListgoto state 48
	OperatorElementgoto state 49
	Identifier     goto state 41

State 7

	PI -> SET . OperatorElement COMMA OperatorElement    (rule 25)

	HALT           shift, and enter state 42
	FPUTS          shift, and enter state 43
	STDOUT         shift, and enter state 44
	BYTE_LIT       shift, and enter state 45
	ID             shift, and enter state 21
	REG            shift, and enter state 46

	OperatorElementgoto state 40
	Identifier     goto state 41

State 8

	AssignmentLine -> ID . PI                           (rule 6)
	AssignmentLine -> ID . OP_CODE TwoPartOperatorList    (rule 7)
	AssignmentLine -> ID . OP_CODE ThreePartOperatorList    (rule 8)

	OP_CODE        shift, and enter state 39
	SET            shift, and enter state 7
	LOC            shift, and enter state 9
	IS             shift, and enter state 10
	WYDE           shift, and enter state 11
	TETRA          shift, and enter state 12
	OCTA           shift, and enter state 13
	GREG           shift, and enter state 14
	BYTE           shift, and enter state 15

	PI             goto state 38

State 9

	PI -> LOC . GlobalVariables                         (rule 19)
	PI -> LOC . HEX                                     (rule 20)
	PI -> LOC . Loc_Exp                                 (rule 21)

	BYTE_LIT       shift, and enter state 34
	ID             shift, and enter state 21
	AT             shift, and enter state 35
	DS             shift, and enter state 36
	HEX            shift, and enter state 37

	Identifier     goto state 18
	GlobalVariablesgoto state 32
	Loc_Exp        goto state 33

State 10

	PI -> IS . INT                                      (rule 33)
	PI -> IS . REG                                      (rule 34)
	PI -> IS . Identifier                               (rule 35)

	ID             shift, and enter state 21
	REG            shift, and enter state 30
	INT            shift, and enter state 31

	Identifier     goto state 29

State 11

	PI -> WYDE . Byte_Array                             (rule 27)
	PI -> WYDE . BYTE_LIT                               (rule 28)

	BYTE_LIT       shift, and enter state 28
	STR            shift, and enter state 17

	Byte_Array     goto state 27

State 12

	PI -> TETRA . Byte_Array                            (rule 29)
	PI -> TETRA . BYTE_LIT                              (rule 30)

	BYTE_LIT       shift, and enter state 26
	STR            shift, and enter state 17

	Byte_Array     goto state 25

State 13

	PI -> OCTA . Byte_Array                             (rule 31)
	PI -> OCTA . BYTE_LIT                               (rule 32)

	BYTE_LIT       shift, and enter state 24
	STR            shift, and enter state 17

	Byte_Array     goto state 23

State 14

	PI -> GREG . AT                                     (rule 22)
	PI -> GREG . BYTE_LIT                               (rule 23)
	PI -> GREG . Loc_Exp                                (rule 24)

	BYTE_LIT       shift, and enter state 20
	ID             shift, and enter state 21
	AT             shift, and enter state 22

	Identifier     goto state 18
	Loc_Exp        goto state 19

State 15

	PI -> BYTE . Byte_Array                             (rule 26)

	STR            shift, and enter state 17

	Byte_Array     goto state 16

State 16

	PI -> BYTE Byte_Array .                             (rule 26)
	Byte_Array -> Byte_Array . COMMA STR                (rule 37)
	Byte_Array -> Byte_Array . COMMA BYTE_LIT           (rule 38)

	OP_CODE        reduce using rule 26
	SET            reduce using rule 26
	COMMA          shift, and enter state 58
	ID             reduce using rule 26
	LOC            reduce using rule 26
	IS             reduce using rule 26
	WYDE           reduce using rule 26
	TETRA          reduce using rule 26
	OCTA           reduce using rule 26
	GREG           reduce using rule 26
	BYTE           reduce using rule 26
	%eof           reduce using rule 26


State 17

	Byte_Array -> STR .                                 (rule 36)

	OP_CODE        reduce using rule 36
	SET            reduce using rule 36
	COMMA          reduce using rule 36
	ID             reduce using rule 36
	LOC            reduce using rule 36
	IS             reduce using rule 36
	WYDE           reduce using rule 36
	TETRA          reduce using rule 36
	OCTA           reduce using rule 36
	GREG           reduce using rule 36
	BYTE           reduce using rule 36
	%eof           reduce using rule 36


State 18

	Loc_Exp -> Identifier .                             (rule 40)

	OP_CODE        reduce using rule 40
	SET            reduce using rule 40
	ID             reduce using rule 40
	LOC            reduce using rule 40
	IS             reduce using rule 40
	WYDE           reduce using rule 40
	TETRA          reduce using rule 40
	OCTA           reduce using rule 40
	GREG           reduce using rule 40
	PLUS           reduce using rule 40
	MINUS          reduce using rule 40
	MULTIPLY       reduce using rule 40
	DIVIDE         reduce using rule 40
	BYTE           reduce using rule 40
	%eof           reduce using rule 40


State 19

	PI -> GREG Loc_Exp .                                (rule 24)
	Loc_Exp -> Loc_Exp . PLUS BYTE_LIT                  (rule 43)
	Loc_Exp -> Loc_Exp . PLUS Identifier                (rule 44)
	Loc_Exp -> Loc_Exp . PLUS AT                        (rule 45)
	Loc_Exp -> Loc_Exp . MINUS BYTE_LIT                 (rule 46)
	Loc_Exp -> Loc_Exp . MINUS Identifier               (rule 47)
	Loc_Exp -> Loc_Exp . MINUS AT                       (rule 48)
	Loc_Exp -> Loc_Exp . MULTIPLY BYTE_LIT              (rule 49)
	Loc_Exp -> Loc_Exp . MULTIPLY Identifier            (rule 50)
	Loc_Exp -> Loc_Exp . MULTIPLY AT                    (rule 51)
	Loc_Exp -> Loc_Exp . DIVIDE BYTE_LIT                (rule 52)
	Loc_Exp -> Loc_Exp . DIVIDE Identifier              (rule 53)
	Loc_Exp -> Loc_Exp . DIVIDE AT                      (rule 54)

	OP_CODE        reduce using rule 24
	SET            reduce using rule 24
	ID             reduce using rule 24
	LOC            reduce using rule 24
	IS             reduce using rule 24
	WYDE           reduce using rule 24
	TETRA          reduce using rule 24
	OCTA           reduce using rule 24
	GREG           reduce using rule 24
	PLUS           shift, and enter state 54
	MINUS          shift, and enter state 55
	MULTIPLY       shift, and enter state 56
	DIVIDE         shift, and enter state 57
	BYTE           reduce using rule 24
	%eof           reduce using rule 24


State 20

	PI -> GREG BYTE_LIT .                               (rule 23)
	Loc_Exp -> BYTE_LIT .                               (rule 41)

	OP_CODE        reduce using rule 41
			(reduce using rule 23)

	SET            reduce using rule 41
			(reduce using rule 23)

	ID             reduce using rule 41
			(reduce using rule 23)

	LOC            reduce using rule 41
			(reduce using rule 23)

	IS             reduce using rule 41
			(reduce using rule 23)

	WYDE           reduce using rule 41
			(reduce using rule 23)

	TETRA          reduce using rule 41
			(reduce using rule 23)

	OCTA           reduce using rule 41
			(reduce using rule 23)

	GREG           reduce using rule 41
			(reduce using rule 23)

	PLUS           reduce using rule 41
	MINUS          reduce using rule 41
	MULTIPLY       reduce using rule 41
	DIVIDE         reduce using rule 41
	BYTE           reduce using rule 41
			(reduce using rule 23)

	%eof           reduce using rule 41
			(reduce using rule 23)



State 21

	Identifier -> ID .                                  (rule 18)

	OP_CODE        reduce using rule 18
	SET            reduce using rule 18
	COMMA          reduce using rule 18
	ID             reduce using rule 18
	LOC            reduce using rule 18
	IS             reduce using rule 18
	WYDE           reduce using rule 18
	TETRA          reduce using rule 18
	OCTA           reduce using rule 18
	GREG           reduce using rule 18
	PLUS           reduce using rule 18
	MINUS          reduce using rule 18
	MULTIPLY       reduce using rule 18
	DIVIDE         reduce using rule 18
	BYTE           reduce using rule 18
	%eof           reduce using rule 18


State 22

	PI -> GREG AT .                                     (rule 22)
	Loc_Exp -> AT .                                     (rule 42)

	OP_CODE        reduce using rule 42
			(reduce using rule 22)

	SET            reduce using rule 42
			(reduce using rule 22)

	ID             reduce using rule 42
			(reduce using rule 22)

	LOC            reduce using rule 42
			(reduce using rule 22)

	IS             reduce using rule 42
			(reduce using rule 22)

	WYDE           reduce using rule 42
			(reduce using rule 22)

	TETRA          reduce using rule 42
			(reduce using rule 22)

	OCTA           reduce using rule 42
			(reduce using rule 22)

	GREG           reduce using rule 42
			(reduce using rule 22)

	PLUS           reduce using rule 42
	MINUS          reduce using rule 42
	MULTIPLY       reduce using rule 42
	DIVIDE         reduce using rule 42
	BYTE           reduce using rule 42
			(reduce using rule 22)

	%eof           reduce using rule 42
			(reduce using rule 22)



State 23

	PI -> OCTA Byte_Array .                             (rule 31)
	Byte_Array -> Byte_Array . COMMA STR                (rule 37)
	Byte_Array -> Byte_Array . COMMA BYTE_LIT           (rule 38)

	OP_CODE        reduce using rule 31
	SET            reduce using rule 31
	COMMA          shift, and enter state 58
	ID             reduce using rule 31
	LOC            reduce using rule 31
	IS             reduce using rule 31
	WYDE           reduce using rule 31
	TETRA          reduce using rule 31
	OCTA           reduce using rule 31
	GREG           reduce using rule 31
	BYTE           reduce using rule 31
	%eof           reduce using rule 31


State 24

	PI -> OCTA BYTE_LIT .                               (rule 32)

	OP_CODE        reduce using rule 32
	SET            reduce using rule 32
	ID             reduce using rule 32
	LOC            reduce using rule 32
	IS             reduce using rule 32
	WYDE           reduce using rule 32
	TETRA          reduce using rule 32
	OCTA           reduce using rule 32
	GREG           reduce using rule 32
	BYTE           reduce using rule 32
	%eof           reduce using rule 32


State 25

	PI -> TETRA Byte_Array .                            (rule 29)
	Byte_Array -> Byte_Array . COMMA STR                (rule 37)
	Byte_Array -> Byte_Array . COMMA BYTE_LIT           (rule 38)

	OP_CODE        reduce using rule 29
	SET            reduce using rule 29
	COMMA          shift, and enter state 58
	ID             reduce using rule 29
	LOC            reduce using rule 29
	IS             reduce using rule 29
	WYDE           reduce using rule 29
	TETRA          reduce using rule 29
	OCTA           reduce using rule 29
	GREG           reduce using rule 29
	BYTE           reduce using rule 29
	%eof           reduce using rule 29


State 26

	PI -> TETRA BYTE_LIT .                              (rule 30)

	OP_CODE        reduce using rule 30
	SET            reduce using rule 30
	ID             reduce using rule 30
	LOC            reduce using rule 30
	IS             reduce using rule 30
	WYDE           reduce using rule 30
	TETRA          reduce using rule 30
	OCTA           reduce using rule 30
	GREG           reduce using rule 30
	BYTE           reduce using rule 30
	%eof           reduce using rule 30


State 27

	PI -> WYDE Byte_Array .                             (rule 27)
	Byte_Array -> Byte_Array . COMMA STR                (rule 37)
	Byte_Array -> Byte_Array . COMMA BYTE_LIT           (rule 38)

	OP_CODE        reduce using rule 27
	SET            reduce using rule 27
	COMMA          shift, and enter state 58
	ID             reduce using rule 27
	LOC            reduce using rule 27
	IS             reduce using rule 27
	WYDE           reduce using rule 27
	TETRA          reduce using rule 27
	OCTA           reduce using rule 27
	GREG           reduce using rule 27
	BYTE           reduce using rule 27
	%eof           reduce using rule 27


State 28

	PI -> WYDE BYTE_LIT .                               (rule 28)

	OP_CODE        reduce using rule 28
	SET            reduce using rule 28
	ID             reduce using rule 28
	LOC            reduce using rule 28
	IS             reduce using rule 28
	WYDE           reduce using rule 28
	TETRA          reduce using rule 28
	OCTA           reduce using rule 28
	GREG           reduce using rule 28
	BYTE           reduce using rule 28
	%eof           reduce using rule 28


State 29

	PI -> IS Identifier .                               (rule 35)

	OP_CODE        reduce using rule 35
	SET            reduce using rule 35
	ID             reduce using rule 35
	LOC            reduce using rule 35
	IS             reduce using rule 35
	WYDE           reduce using rule 35
	TETRA          reduce using rule 35
	OCTA           reduce using rule 35
	GREG           reduce using rule 35
	BYTE           reduce using rule 35
	%eof           reduce using rule 35


State 30

	PI -> IS REG .                                      (rule 34)

	OP_CODE        reduce using rule 34
	SET            reduce using rule 34
	ID             reduce using rule 34
	LOC            reduce using rule 34
	IS             reduce using rule 34
	WYDE           reduce using rule 34
	TETRA          reduce using rule 34
	OCTA           reduce using rule 34
	GREG           reduce using rule 34
	BYTE           reduce using rule 34
	%eof           reduce using rule 34


State 31

	PI -> IS INT .                                      (rule 33)

	OP_CODE        reduce using rule 33
	SET            reduce using rule 33
	ID             reduce using rule 33
	LOC            reduce using rule 33
	IS             reduce using rule 33
	WYDE           reduce using rule 33
	TETRA          reduce using rule 33
	OCTA           reduce using rule 33
	GREG           reduce using rule 33
	BYTE           reduce using rule 33
	%eof           reduce using rule 33


State 32

	PI -> LOC GlobalVariables .                         (rule 19)

	OP_CODE        reduce using rule 19
	SET            reduce using rule 19
	ID             reduce using rule 19
	LOC            reduce using rule 19
	IS             reduce using rule 19
	WYDE           reduce using rule 19
	TETRA          reduce using rule 19
	OCTA           reduce using rule 19
	GREG           reduce using rule 19
	BYTE           reduce using rule 19
	%eof           reduce using rule 19


State 33

	PI -> LOC Loc_Exp .                                 (rule 21)
	Loc_Exp -> Loc_Exp . PLUS BYTE_LIT                  (rule 43)
	Loc_Exp -> Loc_Exp . PLUS Identifier                (rule 44)
	Loc_Exp -> Loc_Exp . PLUS AT                        (rule 45)
	Loc_Exp -> Loc_Exp . MINUS BYTE_LIT                 (rule 46)
	Loc_Exp -> Loc_Exp . MINUS Identifier               (rule 47)
	Loc_Exp -> Loc_Exp . MINUS AT                       (rule 48)
	Loc_Exp -> Loc_Exp . MULTIPLY BYTE_LIT              (rule 49)
	Loc_Exp -> Loc_Exp . MULTIPLY Identifier            (rule 50)
	Loc_Exp -> Loc_Exp . MULTIPLY AT                    (rule 51)
	Loc_Exp -> Loc_Exp . DIVIDE BYTE_LIT                (rule 52)
	Loc_Exp -> Loc_Exp . DIVIDE Identifier              (rule 53)
	Loc_Exp -> Loc_Exp . DIVIDE AT                      (rule 54)

	OP_CODE        reduce using rule 21
	SET            reduce using rule 21
	ID             reduce using rule 21
	LOC            reduce using rule 21
	IS             reduce using rule 21
	WYDE           reduce using rule 21
	TETRA          reduce using rule 21
	OCTA           reduce using rule 21
	GREG           reduce using rule 21
	PLUS           shift, and enter state 54
	MINUS          shift, and enter state 55
	MULTIPLY       shift, and enter state 56
	DIVIDE         shift, and enter state 57
	BYTE           reduce using rule 21
	%eof           reduce using rule 21


State 34

	Loc_Exp -> BYTE_LIT .                               (rule 41)

	OP_CODE        reduce using rule 41
	SET            reduce using rule 41
	ID             reduce using rule 41
	LOC            reduce using rule 41
	IS             reduce using rule 41
	WYDE           reduce using rule 41
	TETRA          reduce using rule 41
	OCTA           reduce using rule 41
	GREG           reduce using rule 41
	PLUS           reduce using rule 41
	MINUS          reduce using rule 41
	MULTIPLY       reduce using rule 41
	DIVIDE         reduce using rule 41
	BYTE           reduce using rule 41
	%eof           reduce using rule 41


State 35

	Loc_Exp -> AT .                                     (rule 42)

	OP_CODE        reduce using rule 42
	SET            reduce using rule 42
	ID             reduce using rule 42
	LOC            reduce using rule 42
	IS             reduce using rule 42
	WYDE           reduce using rule 42
	TETRA          reduce using rule 42
	OCTA           reduce using rule 42
	GREG           reduce using rule 42
	PLUS           reduce using rule 42
	MINUS          reduce using rule 42
	MULTIPLY       reduce using rule 42
	DIVIDE         reduce using rule 42
	BYTE           reduce using rule 42
	%eof           reduce using rule 42


State 36

	GlobalVariables -> DS .                             (rule 39)

	OP_CODE        reduce using rule 39
	SET            reduce using rule 39
	ID             reduce using rule 39
	LOC            reduce using rule 39
	IS             reduce using rule 39
	WYDE           reduce using rule 39
	TETRA          reduce using rule 39
	OCTA           reduce using rule 39
	GREG           reduce using rule 39
	BYTE           reduce using rule 39
	%eof           reduce using rule 39


State 37

	PI -> LOC HEX .                                     (rule 20)

	OP_CODE        reduce using rule 20
	SET            reduce using rule 20
	ID             reduce using rule 20
	LOC            reduce using rule 20
	IS             reduce using rule 20
	WYDE           reduce using rule 20
	TETRA          reduce using rule 20
	OCTA           reduce using rule 20
	GREG           reduce using rule 20
	BYTE           reduce using rule 20
	%eof           reduce using rule 20


State 38

	AssignmentLine -> ID PI .                           (rule 6)

	OP_CODE        reduce using rule 6
	SET            reduce using rule 6
	ID             reduce using rule 6
	LOC            reduce using rule 6
	IS             reduce using rule 6
	WYDE           reduce using rule 6
	TETRA          reduce using rule 6
	OCTA           reduce using rule 6
	GREG           reduce using rule 6
	BYTE           reduce using rule 6
	%eof           reduce using rule 6


State 39

	AssignmentLine -> ID OP_CODE . TwoPartOperatorList    (rule 7)
	AssignmentLine -> ID OP_CODE . ThreePartOperatorList    (rule 8)

	HALT           shift, and enter state 42
	FPUTS          shift, and enter state 43
	STDOUT         shift, and enter state 44
	BYTE_LIT       shift, and enter state 45
	ID             shift, and enter state 21
	REG            shift, and enter state 46

	ThreePartOperatorListgoto state 52
	TwoPartOperatorListgoto state 53
	OperatorElementgoto state 49
	Identifier     goto state 41

State 40

	PI -> SET OperatorElement . COMMA OperatorElement    (rule 25)

	COMMA          shift, and enter state 51


State 41

	OperatorElement -> Identifier .                     (rule 17)

	OP_CODE        reduce using rule 17
	SET            reduce using rule 17
	COMMA          reduce using rule 17
	ID             reduce using rule 17
	LOC            reduce using rule 17
	IS             reduce using rule 17
	WYDE           reduce using rule 17
	TETRA          reduce using rule 17
	OCTA           reduce using rule 17
	GREG           reduce using rule 17
	BYTE           reduce using rule 17
	%eof           reduce using rule 17


State 42

	OperatorElement -> HALT .                           (rule 13)

	OP_CODE        reduce using rule 13
	SET            reduce using rule 13
	COMMA          reduce using rule 13
	ID             reduce using rule 13
	LOC            reduce using rule 13
	IS             reduce using rule 13
	WYDE           reduce using rule 13
	TETRA          reduce using rule 13
	OCTA           reduce using rule 13
	GREG           reduce using rule 13
	BYTE           reduce using rule 13
	%eof           reduce using rule 13


State 43

	OperatorElement -> FPUTS .                          (rule 14)

	OP_CODE        reduce using rule 14
	SET            reduce using rule 14
	COMMA          reduce using rule 14
	ID             reduce using rule 14
	LOC            reduce using rule 14
	IS             reduce using rule 14
	WYDE           reduce using rule 14
	TETRA          reduce using rule 14
	OCTA           reduce using rule 14
	GREG           reduce using rule 14
	BYTE           reduce using rule 14
	%eof           reduce using rule 14


State 44

	OperatorElement -> STDOUT .                         (rule 15)

	OP_CODE        reduce using rule 15
	SET            reduce using rule 15
	COMMA          reduce using rule 15
	ID             reduce using rule 15
	LOC            reduce using rule 15
	IS             reduce using rule 15
	WYDE           reduce using rule 15
	TETRA          reduce using rule 15
	OCTA           reduce using rule 15
	GREG           reduce using rule 15
	BYTE           reduce using rule 15
	%eof           reduce using rule 15


State 45

	OperatorElement -> BYTE_LIT .                       (rule 12)

	OP_CODE        reduce using rule 12
	SET            reduce using rule 12
	COMMA          reduce using rule 12
	ID             reduce using rule 12
	LOC            reduce using rule 12
	IS             reduce using rule 12
	WYDE           reduce using rule 12
	TETRA          reduce using rule 12
	OCTA           reduce using rule 12
	GREG           reduce using rule 12
	BYTE           reduce using rule 12
	%eof           reduce using rule 12


State 46

	OperatorElement -> REG .                            (rule 16)

	OP_CODE        reduce using rule 16
	SET            reduce using rule 16
	COMMA          reduce using rule 16
	ID             reduce using rule 16
	LOC            reduce using rule 16
	IS             reduce using rule 16
	WYDE           reduce using rule 16
	TETRA          reduce using rule 16
	OCTA           reduce using rule 16
	GREG           reduce using rule 16
	BYTE           reduce using rule 16
	%eof           reduce using rule 16


State 47

	AssignmentLine -> OP_CODE ThreePartOperatorList .    (rule 5)

	OP_CODE        reduce using rule 5
	SET            reduce using rule 5
	ID             reduce using rule 5
	LOC            reduce using rule 5
	IS             reduce using rule 5
	WYDE           reduce using rule 5
	TETRA          reduce using rule 5
	OCTA           reduce using rule 5
	GREG           reduce using rule 5
	BYTE           reduce using rule 5
	%eof           reduce using rule 5


State 48

	AssignmentLine -> OP_CODE TwoPartOperatorList .     (rule 4)

	OP_CODE        reduce using rule 4
	SET            reduce using rule 4
	ID             reduce using rule 4
	LOC            reduce using rule 4
	IS             reduce using rule 4
	WYDE           reduce using rule 4
	TETRA          reduce using rule 4
	OCTA           reduce using rule 4
	GREG           reduce using rule 4
	BYTE           reduce using rule 4
	%eof           reduce using rule 4


State 49

	ThreePartOperatorList -> OperatorElement . COMMA OperatorElement COMMA OperatorElement    (rule 10)
	TwoPartOperatorList -> OperatorElement . COMMA Identifier    (rule 11)

	COMMA          shift, and enter state 50


State 50

	ThreePartOperatorList -> OperatorElement COMMA . OperatorElement COMMA OperatorElement    (rule 10)
	TwoPartOperatorList -> OperatorElement COMMA . Identifier    (rule 11)

	HALT           shift, and enter state 42
	FPUTS          shift, and enter state 43
	STDOUT         shift, and enter state 44
	BYTE_LIT       shift, and enter state 45
	ID             shift, and enter state 21
	REG            shift, and enter state 46

	OperatorElementgoto state 74
	Identifier     goto state 75

State 51

	PI -> SET OperatorElement COMMA . OperatorElement    (rule 25)

	HALT           shift, and enter state 42
	FPUTS          shift, and enter state 43
	STDOUT         shift, and enter state 44
	BYTE_LIT       shift, and enter state 45
	ID             shift, and enter state 21
	REG            shift, and enter state 46

	OperatorElementgoto state 73
	Identifier     goto state 41

State 52

	AssignmentLine -> ID OP_CODE ThreePartOperatorList .    (rule 8)

	OP_CODE        reduce using rule 8
	SET            reduce using rule 8
	ID             reduce using rule 8
	LOC            reduce using rule 8
	IS             reduce using rule 8
	WYDE           reduce using rule 8
	TETRA          reduce using rule 8
	OCTA           reduce using rule 8
	GREG           reduce using rule 8
	BYTE           reduce using rule 8
	%eof           reduce using rule 8


State 53

	AssignmentLine -> ID OP_CODE TwoPartOperatorList .    (rule 7)

	OP_CODE        reduce using rule 7
	SET            reduce using rule 7
	ID             reduce using rule 7
	LOC            reduce using rule 7
	IS             reduce using rule 7
	WYDE           reduce using rule 7
	TETRA          reduce using rule 7
	OCTA           reduce using rule 7
	GREG           reduce using rule 7
	BYTE           reduce using rule 7
	%eof           reduce using rule 7


State 54

	Loc_Exp -> Loc_Exp PLUS . BYTE_LIT                  (rule 43)
	Loc_Exp -> Loc_Exp PLUS . Identifier                (rule 44)
	Loc_Exp -> Loc_Exp PLUS . AT                        (rule 45)

	BYTE_LIT       shift, and enter state 71
	ID             shift, and enter state 21
	AT             shift, and enter state 72

	Identifier     goto state 70

State 55

	Loc_Exp -> Loc_Exp MINUS . BYTE_LIT                 (rule 46)
	Loc_Exp -> Loc_Exp MINUS . Identifier               (rule 47)
	Loc_Exp -> Loc_Exp MINUS . AT                       (rule 48)

	BYTE_LIT       shift, and enter state 68
	ID             shift, and enter state 21
	AT             shift, and enter state 69

	Identifier     goto state 67

State 56

	Loc_Exp -> Loc_Exp MULTIPLY . BYTE_LIT              (rule 49)
	Loc_Exp -> Loc_Exp MULTIPLY . Identifier            (rule 50)
	Loc_Exp -> Loc_Exp MULTIPLY . AT                    (rule 51)

	BYTE_LIT       shift, and enter state 65
	ID             shift, and enter state 21
	AT             shift, and enter state 66

	Identifier     goto state 64

State 57

	Loc_Exp -> Loc_Exp DIVIDE . BYTE_LIT                (rule 52)
	Loc_Exp -> Loc_Exp DIVIDE . Identifier              (rule 53)
	Loc_Exp -> Loc_Exp DIVIDE . AT                      (rule 54)

	BYTE_LIT       shift, and enter state 62
	ID             shift, and enter state 21
	AT             shift, and enter state 63

	Identifier     goto state 61

State 58

	Byte_Array -> Byte_Array COMMA . STR                (rule 37)
	Byte_Array -> Byte_Array COMMA . BYTE_LIT           (rule 38)

	BYTE_LIT       shift, and enter state 59
	STR            shift, and enter state 60


State 59

	Byte_Array -> Byte_Array COMMA BYTE_LIT .           (rule 38)

	OP_CODE        reduce using rule 38
	SET            reduce using rule 38
	COMMA          reduce using rule 38
	ID             reduce using rule 38
	LOC            reduce using rule 38
	IS             reduce using rule 38
	WYDE           reduce using rule 38
	TETRA          reduce using rule 38
	OCTA           reduce using rule 38
	GREG           reduce using rule 38
	BYTE           reduce using rule 38
	%eof           reduce using rule 38


State 60

	Byte_Array -> Byte_Array COMMA STR .                (rule 37)

	OP_CODE        reduce using rule 37
	SET            reduce using rule 37
	COMMA          reduce using rule 37
	ID             reduce using rule 37
	LOC            reduce using rule 37
	IS             reduce using rule 37
	WYDE           reduce using rule 37
	TETRA          reduce using rule 37
	OCTA           reduce using rule 37
	GREG           reduce using rule 37
	BYTE           reduce using rule 37
	%eof           reduce using rule 37


State 61

	Loc_Exp -> Loc_Exp DIVIDE Identifier .              (rule 53)

	OP_CODE        reduce using rule 53
	SET            reduce using rule 53
	ID             reduce using rule 53
	LOC            reduce using rule 53
	IS             reduce using rule 53
	WYDE           reduce using rule 53
	TETRA          reduce using rule 53
	OCTA           reduce using rule 53
	GREG           reduce using rule 53
	PLUS           reduce using rule 53
	MINUS          reduce using rule 53
	MULTIPLY       reduce using rule 53
	DIVIDE         reduce using rule 53
	BYTE           reduce using rule 53
	%eof           reduce using rule 53


State 62

	Loc_Exp -> Loc_Exp DIVIDE BYTE_LIT .                (rule 52)

	OP_CODE        reduce using rule 52
	SET            reduce using rule 52
	ID             reduce using rule 52
	LOC            reduce using rule 52
	IS             reduce using rule 52
	WYDE           reduce using rule 52
	TETRA          reduce using rule 52
	OCTA           reduce using rule 52
	GREG           reduce using rule 52
	PLUS           reduce using rule 52
	MINUS          reduce using rule 52
	MULTIPLY       reduce using rule 52
	DIVIDE         reduce using rule 52
	BYTE           reduce using rule 52
	%eof           reduce using rule 52


State 63

	Loc_Exp -> Loc_Exp DIVIDE AT .                      (rule 54)

	OP_CODE        reduce using rule 54
	SET            reduce using rule 54
	ID             reduce using rule 54
	LOC            reduce using rule 54
	IS             reduce using rule 54
	WYDE           reduce using rule 54
	TETRA          reduce using rule 54
	OCTA           reduce using rule 54
	GREG           reduce using rule 54
	PLUS           reduce using rule 54
	MINUS          reduce using rule 54
	MULTIPLY       reduce using rule 54
	DIVIDE         reduce using rule 54
	BYTE           reduce using rule 54
	%eof           reduce using rule 54


State 64

	Loc_Exp -> Loc_Exp MULTIPLY Identifier .            (rule 50)

	OP_CODE        reduce using rule 50
	SET            reduce using rule 50
	ID             reduce using rule 50
	LOC            reduce using rule 50
	IS             reduce using rule 50
	WYDE           reduce using rule 50
	TETRA          reduce using rule 50
	OCTA           reduce using rule 50
	GREG           reduce using rule 50
	PLUS           reduce using rule 50
	MINUS          reduce using rule 50
	MULTIPLY       reduce using rule 50
	DIVIDE         reduce using rule 50
	BYTE           reduce using rule 50
	%eof           reduce using rule 50


State 65

	Loc_Exp -> Loc_Exp MULTIPLY BYTE_LIT .              (rule 49)

	OP_CODE        reduce using rule 49
	SET            reduce using rule 49
	ID             reduce using rule 49
	LOC            reduce using rule 49
	IS             reduce using rule 49
	WYDE           reduce using rule 49
	TETRA          reduce using rule 49
	OCTA           reduce using rule 49
	GREG           reduce using rule 49
	PLUS           reduce using rule 49
	MINUS          reduce using rule 49
	MULTIPLY       reduce using rule 49
	DIVIDE         reduce using rule 49
	BYTE           reduce using rule 49
	%eof           reduce using rule 49


State 66

	Loc_Exp -> Loc_Exp MULTIPLY AT .                    (rule 51)

	OP_CODE        reduce using rule 51
	SET            reduce using rule 51
	ID             reduce using rule 51
	LOC            reduce using rule 51
	IS             reduce using rule 51
	WYDE           reduce using rule 51
	TETRA          reduce using rule 51
	OCTA           reduce using rule 51
	GREG           reduce using rule 51
	PLUS           reduce using rule 51
	MINUS          reduce using rule 51
	MULTIPLY       reduce using rule 51
	DIVIDE         reduce using rule 51
	BYTE           reduce using rule 51
	%eof           reduce using rule 51


State 67

	Loc_Exp -> Loc_Exp MINUS Identifier .               (rule 47)

	OP_CODE        reduce using rule 47
	SET            reduce using rule 47
	ID             reduce using rule 47
	LOC            reduce using rule 47
	IS             reduce using rule 47
	WYDE           reduce using rule 47
	TETRA          reduce using rule 47
	OCTA           reduce using rule 47
	GREG           reduce using rule 47
	PLUS           reduce using rule 47
	MINUS          reduce using rule 47
	MULTIPLY       reduce using rule 47
	DIVIDE         reduce using rule 47
	BYTE           reduce using rule 47
	%eof           reduce using rule 47


State 68

	Loc_Exp -> Loc_Exp MINUS BYTE_LIT .                 (rule 46)

	OP_CODE        reduce using rule 46
	SET            reduce using rule 46
	ID             reduce using rule 46
	LOC            reduce using rule 46
	IS             reduce using rule 46
	WYDE           reduce using rule 46
	TETRA          reduce using rule 46
	OCTA           reduce using rule 46
	GREG           reduce using rule 46
	PLUS           reduce using rule 46
	MINUS          reduce using rule 46
	MULTIPLY       reduce using rule 46
	DIVIDE         reduce using rule 46
	BYTE           reduce using rule 46
	%eof           reduce using rule 46


State 69

	Loc_Exp -> Loc_Exp MINUS AT .                       (rule 48)

	OP_CODE        reduce using rule 48
	SET            reduce using rule 48
	ID             reduce using rule 48
	LOC            reduce using rule 48
	IS             reduce using rule 48
	WYDE           reduce using rule 48
	TETRA          reduce using rule 48
	OCTA           reduce using rule 48
	GREG           reduce using rule 48
	PLUS           reduce using rule 48
	MINUS          reduce using rule 48
	MULTIPLY       reduce using rule 48
	DIVIDE         reduce using rule 48
	BYTE           reduce using rule 48
	%eof           reduce using rule 48


State 70

	Loc_Exp -> Loc_Exp PLUS Identifier .                (rule 44)

	OP_CODE        reduce using rule 44
	SET            reduce using rule 44
	ID             reduce using rule 44
	LOC            reduce using rule 44
	IS             reduce using rule 44
	WYDE           reduce using rule 44
	TETRA          reduce using rule 44
	OCTA           reduce using rule 44
	GREG           reduce using rule 44
	PLUS           reduce using rule 44
	MINUS          reduce using rule 44
	MULTIPLY       reduce using rule 44
	DIVIDE         reduce using rule 44
	BYTE           reduce using rule 44
	%eof           reduce using rule 44


State 71

	Loc_Exp -> Loc_Exp PLUS BYTE_LIT .                  (rule 43)

	OP_CODE        reduce using rule 43
	SET            reduce using rule 43
	ID             reduce using rule 43
	LOC            reduce using rule 43
	IS             reduce using rule 43
	WYDE           reduce using rule 43
	TETRA          reduce using rule 43
	OCTA           reduce using rule 43
	GREG           reduce using rule 43
	PLUS           reduce using rule 43
	MINUS          reduce using rule 43
	MULTIPLY       reduce using rule 43
	DIVIDE         reduce using rule 43
	BYTE           reduce using rule 43
	%eof           reduce using rule 43


State 72

	Loc_Exp -> Loc_Exp PLUS AT .                        (rule 45)

	OP_CODE        reduce using rule 45
	SET            reduce using rule 45
	ID             reduce using rule 45
	LOC            reduce using rule 45
	IS             reduce using rule 45
	WYDE           reduce using rule 45
	TETRA          reduce using rule 45
	OCTA           reduce using rule 45
	GREG           reduce using rule 45
	PLUS           reduce using rule 45
	MINUS          reduce using rule 45
	MULTIPLY       reduce using rule 45
	DIVIDE         reduce using rule 45
	BYTE           reduce using rule 45
	%eof           reduce using rule 45


State 73

	PI -> SET OperatorElement COMMA OperatorElement .    (rule 25)

	OP_CODE        reduce using rule 25
	SET            reduce using rule 25
	ID             reduce using rule 25
	LOC            reduce using rule 25
	IS             reduce using rule 25
	WYDE           reduce using rule 25
	TETRA          reduce using rule 25
	OCTA           reduce using rule 25
	GREG           reduce using rule 25
	BYTE           reduce using rule 25
	%eof           reduce using rule 25


State 74

	ThreePartOperatorList -> OperatorElement COMMA OperatorElement . COMMA OperatorElement    (rule 10)

	COMMA          shift, and enter state 76


State 75

	TwoPartOperatorList -> OperatorElement COMMA Identifier .    (rule 11)
	OperatorElement -> Identifier .                     (rule 17)

	OP_CODE        reduce using rule 11
	SET            reduce using rule 11
	COMMA          reduce using rule 17
	ID             reduce using rule 11
	LOC            reduce using rule 11
	IS             reduce using rule 11
	WYDE           reduce using rule 11
	TETRA          reduce using rule 11
	OCTA           reduce using rule 11
	GREG           reduce using rule 11
	BYTE           reduce using rule 11
	%eof           reduce using rule 11


State 76

	ThreePartOperatorList -> OperatorElement COMMA OperatorElement COMMA . OperatorElement    (rule 10)

	HALT           shift, and enter state 42
	FPUTS          shift, and enter state 43
	STDOUT         shift, and enter state 44
	BYTE_LIT       shift, and enter state 45
	ID             shift, and enter state 21
	REG            shift, and enter state 46

	OperatorElementgoto state 77
	Identifier     goto state 41

State 77

	ThreePartOperatorList -> OperatorElement COMMA OperatorElement COMMA OperatorElement .    (rule 10)

	OP_CODE        reduce using rule 10
	SET            reduce using rule 10
	ID             reduce using rule 10
	LOC            reduce using rule 10
	IS             reduce using rule 10
	WYDE           reduce using rule 10
	TETRA          reduce using rule 10
	OCTA           reduce using rule 10
	GREG           reduce using rule 10
	BYTE           reduce using rule 10
	%eof           reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 67
Number of terminals: 25
Number of non-terminals: 17
Number of states: 78
